<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.personnel.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.personnel.pojo.User" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="sex" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="phone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="role" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="department_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="salary" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="entry_time" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="is_delete" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_time" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="DATE" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, password, sex, phone, role, department_id, salary, entry_time, is_delete, 
    create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.personnel.pojo.User" >
    insert into user (id, name, password, 
      sex, phone, role, department_id, 
      salary, entry_time, is_delete, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}, 
      #{salary,jdbcType=REAL}, #{entryTime,jdbcType=DATE}, #{isDelete,jdbcType=INTEGER}, 
      #{createTime,jdbcType=DATE}, #{updateTime,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.personnel.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="salary != null" >
        salary,
      </if>
      <if test="entryTime != null" >
        entry_time,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="salary != null" >
        #{salary,jdbcType=REAL},
      </if>
      <if test="entryTime != null" >
        #{entryTime,jdbcType=DATE},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.personnel.pojo.User" >
    update user
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="salary != null" >
        salary = #{salary,jdbcType=REAL},
      </if>
      <if test="entryTime != null" >
        entry_time = #{entryTime,jdbcType=DATE},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.personnel.pojo.User" >
    update user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER},
      department_id = #{departmentId,jdbcType=INTEGER},
      salary = #{salary,jdbcType=REAL},
      entry_time = #{entryTime,jdbcType=DATE},
      is_delete = #{isDelete,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=DATE},
      update_time = #{updateTime,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="checkUsername" resultType="int" parameterType="string">
    select count(1) from user
    where name = #{username}
  </select>
  <select id="selectLogin" resultMap="BaseResultMap" parameterType="map">
    select <include refid="Base_Column_List" />
    from user
    where name = #{username} and
    password = #{password}
  </select>
  <select id="selectByDepartmentId" resultMap="BaseResultMap" parameterType="int">
    select
    <include refid="Base_Column_List" />
    from user
    where department_id = #{departmentId}
  </select>
  <update id="cancel" parameterType="int">
    update user
    set is_delete = 1
    where id = #{id}
  </update>
  <select id="checkRole" resultType="int" parameterType="int">
    select role from user
    where id = #{userId}
  </select>
  <select id="checkUserAndDepartment" resultType="int" parameterType="map">
    select count(1)
    from user
    where id= #{userId}
    and department_id = #{departmentId}
  </select>
  <update id="updateUserDepartmentId" parameterType="map">
    update user
    set department_id = #{newDepartmentId}
    where department_id = #{oldDepartmentId}
  </update>
</mapper>