<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.personnel.dao.DepartmentMapper" >
  <resultMap id="BaseResultMap" type="com.personnel.pojo.Department" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="host" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="parent_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="is_delete" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_time" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="DATE" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, host, parent_id, is_delete, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from department
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from department
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.personnel.pojo.Department" >
    insert into department (id, name, host, 
      parent_id, is_delete, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{host,jdbcType=INTEGER}, 
      #{parentId,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER}, now(),
      now())
  </insert>
  <insert id="insertSelective" parameterType="com.personnel.pojo.Department" >
    insert into department
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="host != null" >
        host,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      create_time,
      update_time,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="host != null" >
        #{host,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
      now(),
      now(),
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.personnel.pojo.Department" >
    update department
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="host != null" >
        host = #{host,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=DATE},
      </if>
        update_time = now(),
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.personnel.pojo.Department" >
    update department
    set name = #{name,jdbcType=VARCHAR},
      host = #{host,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=DATE},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getDepartments" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from department
    where is_delete = 0
    group by name
  </select>
  <select id="selectDepartmentIdByHostId" resultType="int" parameterType="int">
    select id
    from department
    where host = #{hostId}
    and is_delete = 0
  </select>
  <select id="selectHostIdByDeaprtmentId" resultType="int" parameterType="int">
    select host
    from department
    where id = #{departmentId}
  </select>
  <select id="selectSonDeaprtents" resultMap="BaseResultMap" parameterType="int">
    select
    <include refid="Base_Column_List"/>
    from department
    where parent_id = #{departmentId}
    and is_delete = 0
  </select>
</mapper>